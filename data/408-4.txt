Q：线程间的同步与通信类型有哪些？

　　1.互斥锁mutex

　　2.条件变量

　　3.信号量机制

Q：线程的实现方式有哪几种？

　　1.内核支持线程（核内切换快，开销小，模式间切换慢）

　　2.用户级线程（节省模式间切换的开销）

　　3.混合

Q：产生死锁的原因有哪些？

　　对互斥资源分配不当
　　进程推进顺序不当
Q：处理产生死锁的办法有哪些？

　预防死锁（破坏产生死锁的必要条件
    避免死锁；3.检测死锁；4.解除死锁
Q：死锁的产生和避免?

死锁的四个必要条件：
(1)互斥条件(Mutual exclusion)：资源不能被共享，只能由一个进程使用。
(2)请求与保持条件(Hold and wait)：已经得到资源的进程可以再次申请新的资源。
(3)非剥夺条件(No pre-emption)：已经分配的资源不能从相应的进程中被强制地剥夺。
(4)循环等待条件(Circular wait)：系统中若干进程组成环路，该环路中每个进程都在等待相邻进程正占用的资源。

　死锁避免（deadlock avoidence）是在系统运行过程中注意避免死锁的发生。这就要求每当申请一个资源时，系统都应根据一定的算法判断是否认可这次申请，使得在今后一段时间内系统不会出现死锁。这面方最著名的算法首推Dijkstra[1965]提出的银行家（banker）算法。

Q：死锁与饥饿的区别？
– 都是资源分配问题
– 死锁是等待永远不会释放的资源，而饥饿申请的资源会被释放，只是永远不会分配给自己
– 一旦产生死锁，则死锁进程必然是多个，而饥饿进程可以只有一个
– 饥饿的进程可能处于就绪状态，而死锁进程一定是阻塞进程

Q：FCB包含什么？
文件指针：上次读写位置。
文件打开数：多少个进程打开了此文件。
文件磁盘位置。
文件的访问权限：创建、只读、读写等。

Q：页面置换算法？
最佳置换算法OPT
先进先出置换算法FIFO
最近最久未使用算法LRU
时钟算法LOCK
改进型时钟算法

Q：批处理作业调度算法？
先来先服务FCFS
最短作业优先SJF
最高响应比优先HRN
多级队列调度算法

Q：进程调度算法？
先进先出FIFO
时间片轮转算法RR
最高优先级算法HPF
多级队列反馈算法

Q：磁盘调度算法？
先来先服务FCFS
最短寻道时间优先SSTF
扫描算法SCAN
循环扫描算法C-SCAN

Q：FAT（File Allocation Table）？
分配给文件的所有盘块号都放在FAT中，记录了文件的物理位置。

Q：什么是中断？

1.中断的引入——为了支持CPU和设备之间的并行操作
中断也称外中断，指来自CPU执行指令以外的事件的发生，如设备发出的I/O结束中断、时钟中断等。这一类中断通常是与当前执行的指令无关的事件。
2.异常的引入——表示CPU执行指令本身时出现的问题
异常也称内中断、例外或陷入，指源自CPU执行指令内部的事件，如程序的非法操作码、地址越界、算术溢出、缺页异常等。对异常的处理一般要依赖与当前程序的运行现场，不能被屏蔽。