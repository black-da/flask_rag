11、使用 final 关键字修饰一个变量时，是引用不能变，还是引用的对象不能变？
当使用final关键字修饰变量时，这意味着该变量的引用地址被固定，它不能再指向另一个对象或值。然而，这并不意味着该引用所指向的对象的内容也不能改变。事实上，如果这个变量指向的是一个可变对象（如数组、集合或任何其他用户定义的可变类实例），那么对象的内容是可以修改的。

12、this 和super 关键字的作用
（1）this关键字的作用

对象内部指代自身的引用；
解决成员变量和局部变量的同名问题；
可以调用成员变量，不能调用局部变量；
可以调用成员方法。
（2）super关键字的作用

调用父类的成员变量或方法
调用父类的构造函数
13、在 Java 中，为什么不允许从静态方法中访问非静态变量？
静态变量属于类本身，在类加载的时候就会分配内存，可以通过类名直接访问；
非静态变量属于类的对象，只有在类的对象产生时，才会分配内存，通过类的实例去访问；
静态方法也属于类本身，但是此时没有类的实例，内存中没有非静态变量，所以无法调用。
14、final 与 static 的区别？
当一个变量被声明为final时，它的值在初始化后不能被改变。对于引用类型，它指的是引用不可变，即不能再指向其他对象，但对象本身的状态可能改变。当方法被声明为final时，该方法不能被子类重写。当一个类被声明为final时，该类不能被继承。

当一个变量或方法被声明为static时，它属于类而非类的实例。静态变量在内存中只有一份，无论创建多少个类的实例，所有实例共享同一个静态变量。静态方法可以直接通过类名调用，无需创建类的实例。静态代码块在类加载时执行，通常用于系统初始化。

final关键字主要用于声明常量、防止继承和阻止方法重写，而static关键字主要用于实现与类相关联的变量和方法，以及控制类的初始化过程。

15、int可以强制转换为byte吗？
可以进行强制转换，在Java中，int是32位，byte是8位，如果强制转换，int类型的高24位将会被丢弃。

16、char 型变量中能存储一个中文汉字吗？
在 Java 中，char 类型占 2 个字节，而且 Java 默认采用Unicode 编码，一个Unicode 码占16 位，所以一个 Unicode 码占两个字节，char 类型变量可以存储一个中文汉字。

17、byte类型127+1等于多少
byte的范围是-128~127。

字节长度为8位，最左边的是符号位，而127的二进制为01111111，所以执行+1操作时，01111111变为10000000。

大家知道，计算机中存储负数，存的是补码的兴衰。左边第一位为符号位。

那么负数的补码转换成十进制如下：

一个数如果为正，则它的原码、反码、补码相同；一个正数的补码，将其转化为十进制，可以直接转换。

已知一个负数的补码，将其转换为十进制数，步骤如下：

先对各位取反；
将其转换为十进制数；
加上负号，再减去1；
例如10000000，最高位是1，是负数，①对各位取反得01111111，转换为十进制就是127，加上负号得-127，再减去1得-128；